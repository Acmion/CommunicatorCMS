@using System.Net.Http;
@using Acmion.CommunicatorCmsLibrary.Core.Settings;
@using Acmion.CommunicatorCmsLibrary.Core.Actions;
@using Utf8Json;
@using Acmion.CommunicatorCmsLibrary.Core;
@using Acmion.CommunicatorCmsLibrary;
@using Acmion.CommunicatorCmsLibrary.Core.Application.FileSystem;
@using Acmion.CommunicatorCmsLibrary.Core.Application.Pages;

@inject RequestState RequestState;

@{
    var rootPage = await App.Pages.GetByUrl("/");
    var activePage = await RequestState.GetCurrentPage();
}

@{
    if (activePage.Properties.ShowTopNavigationMenu)
    {
        <nav class="hn-menu hn-menu-no-focus hn-top hn-fixed">
            <input type="checkbox" id="hn-top-nav-cb" class="hn-input-state hn-input-state-nav hn-hide-desktop">
            <div class="hn-nav">
                <div class="hn-section hn-section-brand" style="flex-grow: 0">
                    @{
                        if (App.Settings.LogoIcon != "" || App.Settings.LogoContent != "")
                        {
                            <div class="hn-item hn-side-width">
                                <a class="hn-link" href="/">
                                    <span class="hn-icon hn-size-auto">
                                        @Html.Raw(App.Settings.LogoIcon)
                                    </span>
                                    <span class="hn-content">
                                        @Html.Raw(App.Settings.LogoContent)
                                    </span>
                                </a>
                            </div>
                        }
                    }

                    <div class="hn-spacer hn-hide-desktop">

                    </div>
                    <label class="hn-item hn-input hn-input-nav hn-hide-desktop" for="hn-top-nav-cb">
                        <span class="hn-link">
                            <span class="hn-content">
                                <span class="hn-input-active">
                                    <i class="ri-close-line"></i>
                                </span>
                                <span class="hn-input-default">
                                    <i class="ri-menu-line"></i>
                                </span>
                            </span>
                        </span>
                    </label>
                </div>
                <div class="hn-section hn-section-body">
                    @{
                        @await App.Extensions.HyperNav.RenderCommunicatorCmsNavLayout(rootPage, RequestState, "top-nav-cb", false, true, true, 0)

                        var suffix = 0;
                        foreach (var subPage in await rootPage.GetSubPages())
                        {
                            @await App.Extensions.HyperNav.RenderCommunicatorCmsNavLayout(subPage, RequestState, "top-nav-cb" + suffix, true, true, true, int.MaxValue)
                            suffix++;
                        }

                    }
                </div>
            </div>
            <label class="hn-overlay hn-overlay-nav hn-hide-desktop" for="hn-top-nav-cb">
            </label>
        </nav>
        <div class="hn-top-height"></div>
    }
}